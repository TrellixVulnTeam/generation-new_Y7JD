"use strict";

var _mapMain = require("./modules/map-main.js");

var _vacancysSwiper = require("./modules/vacancys-swiper.js");

var _phoneNumber = require("./modules/phone-number.js");

var _projectSwiper = require("./modules/project-swiper.js");

var _scrollHeader = require("./modules/scroll-header.js");

var _arcService = require("./modules/arc-service.js");

var _capstoneSwiper = require("./modules/capstone-swiper.js");

var _hystmodal = _interopRequireDefault(require("./hystmodal"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

// import {
//   parnersSwiperTop,
//   parnersSwiperLower,
// } from "./modules/partners-swiper.js";
if (document.querySelector(".about-group")) {
  var parnersSwiperTop = new Swiper(".partners--top", {
    spaceBetween: 20,
    centeredSlides: true,
    speed: 5000,
    autoplay: {
      delay: 1,
      disableOnInteraction: false
    },
    loop: true,
    slidesPerView: 4,
    allowTouchMove: true,
    disableOnInteraction: true
  });
  var parnersSwiperLower = new Swiper(".partners--lower", {
    spaceBetween: 20,
    centeredSlides: true,
    speed: 5000,
    autoplay: {
      delay: 1,
      reverseDirection: true,
      disableOnInteraction: false
    },
    loop: true,
    slidesPerView: 4,
    allowTouchMove: true,
    disableOnInteraction: true
  });
} // parnersSwiperTop;
// parnersSwiperLower;


_vacancysSwiper.vacancySwiper;
_projectSwiper.projectCardSwiper;
_arcService.arcTabSwiper;
(0, _capstoneSwiper.init)();
var capstoneSwiper = new Swiper(".slider-capstone", {
  spaceBetween: 20,
  slidesPerView: "auto",
  navigation: {
    nextEl: ".swiper-button-next",
    prevEl: ".swiper-button-prev"
  },
  pagination: {
    el: ".capstone-pag",
    type: "progressbar"
  }
}); // SWIPERS

var swiper = new Swiper(".mySwiper", {
  autoplay: {
    delay: 4000
  },
  loop: true,
  pagination: {
    el: ".swiper-pagination"
  }
});
var arcticSwiper = new Swiper(".arctic-swiper", {
  pagination: {
    el: ".swiper-pagination"
  }
});
var swiper1 = new Swiper(".mySwiper1", {
  pagination: {
    el: ".swiper-pagination1",
    type: "progressbar"
  },
  spaceBetween: 20,
  slidesPerView: "auto",
  breakpoints: {
    475: {
      centeredSlides: true
    },
    752: {
      slidesPerView: "auto"
    },
    880: {
      slidesPerView: 2.5
    },
    960: {
      slidesPerView: 3
    },
    1024: {
      slidesPerView: 3.5
    },
    1150: {
      slidesPerView: 4
    },
    1320: {
      slidesPerView: 4.5
    },
    1440: {
      slidesPerView: 4.5
    }
  }
});
var swiper2 = new Swiper(".mySwiper2", {
  effect: "coverflow",
  grabCursor: true,
  centeredSlides: true,
  slidesPerView: "auto",
  coverflowEffect: {
    rotate: 100,
    stretch: -55,
    depth: 100,
    modifier: 0
  },
  navigation: {
    nextEl: ".swiper-button-next",
    prevEl: ".swiper-button-prev"
  },
  initialSlide: 0,
  breakpoints: {
    880: {
      slidesPerView: 3,
      initialSlide: 1
    }
  }
});
var newsSwiper = new Swiper(".news-swiper", {
  spaceBetween: 20,
  slidesPerView: "auto",
  enabled: true,
  speed: 400,
  breakpoints: {
    950: {
      enabled: false
    }
  }
});
var myModal = new _hystmodal.default({
  linkAttributeName: "data-hystmodal",
  catchFocus: true,
  closeOnEsc: true,
  backscroll: true
});
global.HystModal = _hystmodal.default; // press center tabs

var tabs = document.querySelector(".q-news-body");
var tabBtn = document.querySelectorAll(".tab-btn");
var tabContent = document.querySelectorAll(".tab-content");
tabBtn.forEach(function (el) {
  el.addEventListener("click", openTabs);
});

function openTabs(el) {
  var btnTarget = el.currentTarget;
  var tab = btnTarget.dataset.tab;
  tabContent.forEach(function (el) {
    el.classList.remove("tab-content-active");
  });
  tabBtn.forEach(function (el) {
    el.classList.remove("active-tab-btn");
  });
  document.querySelector("#" + tab).classList.add("tab-content-active");
  btnTarget.classList.add("active-tab-btn");
} // arctic services tabs


var tabsArctic = document.querySelector(".q-arc-service__body");
var tabArcContent = document.querySelectorAll(".q-service-body");
var tabArcBtn = document.querySelectorAll(".arc-tab-btn");
tabArcBtn.forEach(function (e) {
  e.addEventListener("click", openTabsArc);
});

function openTabsArc(el) {
  var btnTarget = el.currentTarget;
  var tab = btnTarget.dataset.tabArc;
  tabArcContent.forEach(function (el) {
    el.classList.remove("tab-content-active");
  });
  tabArcBtn.forEach(function (e) {
    e.classList.remove("active-arc-tab-btn");
  });
  document.querySelector("#" + tab).classList.add("tab-content-active");
  btnTarget.classList.add("active-arc-tab-btn");
} // scroll header


(0, _scrollHeader.scrollHeader)(); // header burger

var burgerBtn = document.querySelector(".navTrigger");
var topHeader = document.querySelector(".header-top");
var navBg = document.querySelector(".header-content");
var nav = document.querySelector(".nav-items");
var navItem = document.querySelectorAll(".nav-item");
var hr = document.querySelector(".hr");
var navWrapper = document.querySelector(".nav-items__wrapper");
var header = document.querySelector(".header");
var pageY = window.innerHeight - window.innerHeight + 1;
burgerBtn.addEventListener("click", function () {
  header.classList.toggle("active-white-header");
  topHeader.classList.toggle("active-bg");
  nav.classList.toggle("vertical");
  burgerBtn.classList.toggle("active-burger");

  if (burgerBtn.classList.contains("active-burger")) {
    hr.style.display = "none";
    document.body.style.overflow = "hidden";

    if (window.scrollY >= 50) {
      header.classList.remove("scrolled-header");
    }
  } else {
    hr.style.display = "block";
    document.body.style.overflow = "unset";
    setTimeout(function () {
      window.scrollBy(0, pageY);
    }, 10);
  }

  if (nav.classList.length >= 4) {
    nav.style.position = "relative";
    navWrapper.style.top = "0";
    navItem.forEach(function (el) {
      el.style.position = "unset";
    });
  } else {
    nav.style.position = "unset";
    navWrapper.style.top = "-800px";
    navItem.forEach(function (el) {
      el.style.position = "relative";
    });
  }
});
var mobBurger = document.querySelector(".navTrigger2");
var mobWrapper = document.querySelector(".nav-mob__wrapper");
var navSearch = document.querySelector(".icon-search");
mobBurger.addEventListener("click", function () {
  mobBurger.classList.toggle("active-burger");
  mobWrapper.classList.toggle("active-mob__wrapper");

  if (mobWrapper.classList.contains("active-mob__wrapper")) {
    mobBurger.classList.add("stroke-white");
    navSearch.classList.add("search-scrolled");
    document.body.style.overflow = "hidden";
  } else {
    mobBurger.classList.remove("stroke-white");
    navSearch.classList.remove("search-scrolled");
    document.body.style.overflow = "unset";
  }
});

if (document.querySelector(".q-form-phone")) {
  (0, _phoneNumber.phoneValidate)();
}

if (document.querySelector(".map")) {
  // ready();
  console.log(" with map page"); // let dotCircle = document.querySelector(`[data-dota='${0}']`);
  // dotCircle.click()

  var closeBtnCard = document.querySelector(".close-hide");
  closeBtnCard.click();
  var mapCardHideSwiper = new Swiper(".card-hide__swiper", {
    spaceBetween: 45,
    slidesPerView: "auto",
    centeredSlides: true,
    autoplay: {
      delay: 1500
    } // autoplayDisableOnInteraction:false,

  });
  mapCardHideSwiper.autoplay.stop();
  mapCardHideSwiper.on("slideChange", function () {
    mapCardHideSwiper.onAny(function () {
      var circle = document.querySelectorAll(".circle");
      circle.forEach(function (el) {
        el.style.display = "none";
      });
      mapCardHideSwiper.autoplay.start();

      if (mapCardHideSwiper.activeIndex == 0) {
        var circle2 = document.querySelector("[data-id='".concat(0, "']"));
        circle2.style.display = "block";
      }

      if (mapCardHideSwiper.activeIndex == 1) {
        var _circle = document.querySelector("[data-id='".concat(1, "']"));

        _circle.style.display = "block";
      }

      if (mapCardHideSwiper.activeIndex == 2) {
        var _circle2 = document.querySelector("[data-id='".concat(2, "']"));

        _circle2.style.display = "block";
      }

      if (mapCardHideSwiper.activeIndex == 3) {
        var _circle3 = document.querySelector("[data-id='".concat(3, "']"));

        _circle3.style.display = "block";
      }

      if (mapCardHideSwiper.activeIndex == 4) {
        var _circle4 = document.querySelector("[data-id='".concat(4, "']"));

        _circle4.style.display = "block";
      }

      if (mapCardHideSwiper.activeIndex == 5) {
        var _circle5 = document.querySelector("[data-id='".concat(5, "']"));

        _circle5.style.display = "block";
      }

      if (mapCardHideSwiper.activeIndex == 6) {
        var _circle6 = document.querySelector("[data-id='".concat(6, "']"));

        _circle6.style.display = "block";
      }

      if (mapCardHideSwiper.activeIndex == 7) {
        var _circle7 = document.querySelector("[data-id='".concat(7, "']"));

        _circle7.style.display = "block";
      }

      if (mapCardHideSwiper.activeIndex == 8) {
        var _circle8 = document.querySelector("[data-id='".concat(8, "']"));

        _circle8.style.display = "block";
      }
    });
  });
} // MAP RUSSIA


if (document.querySelector(".map-picker")) {
  var toggleDone = function toggleDone(event) {
    event.target.style.fill = "#6B9B3C";
    pt.x = event.clientX;
    pt.y = event.clientY;
    var cursorpt = pt.matrixTransform(mapBig.getScreenCTM().inverse());
    var circle = document.createElementNS(NS, "circle");
    circle.setAttribute("cx", cursorpt.x);
    circle.setAttribute("cy", cursorpt.y);
    circle.setAttribute("r", 8);
    circle.style.fill = "white";
    mapBig.appendChild(circle);
    console.log("(" + cursorpt.x + ", " + cursorpt.y + ")");
  };

  var mapBig = document.querySelector(".map-russia-svg");
  var pt = mapBig.createSVGPoint();
  var NS = mapBig.getAttribute("xmlns");
  mapBig.addEventListener("click", toggleDone);
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,